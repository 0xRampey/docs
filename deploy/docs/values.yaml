nginx:
  image:
    registry: ghcr.io
    repository: pokt-foundation/docs
    tag: sha-4512415

  service:
    type: ClusterIP
    annotations:
      cloud.google.com/neg: '{"ingress": true}'

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "gce"
      kubernetes.io/ingress.global-static-ip-name: "34.82.230.73" #* `docs-vip` is created with TF
      networking.gke.io/managed-certificates: docs-ssl-cert
    pathType: Prefix
    hostname: docs-network.portal.pokt.network
    path: /

  extraDeploy:
    - kind: ManagedCertificate
      apiVersion: networking.gke.io/v1
      metadata:
        name: docs-ssl-cert
      spec:
        domains:
          - docs-network.portal.pokt.network



    # hosts:
    #   - host: "docs-network.portal.pokt.network"
    #     paths:
    #       - path: /
    #         pathType: Prefix




    # ## @param ingress.ingressClassName Set the ingerssClassName on the ingress record for k8s 1.18+
    # ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
    # ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
    # ##
    # ingressClassName: ""
    # ## @param ingress.tls Create TLS Secret
    # ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
    # ## You can use the ingress.secrets parameter to create this TLS secret or relay on cert-manager to create it
    # ##
    # tls: false
    # ## @param ingress.extraHosts The list of additional hostnames to be covered with this ingress record.
    # ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
    # ## extraHosts:
    # ## - name: nginx.local
    # ##   path: /
    # ##
    # extraHosts: []
    # ## @param ingress.extraPaths Any additional arbitrary paths that may need to be added to the ingress under the main host.
    # ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
    # ## extraPaths:
    # ## - path: /*
    # ##   backend:
    # ##     serviceName: ssl-redirect
    # ##     servicePort: use-annotation
    # ##
    # extraPaths: []
    # ## @param ingress.extraTls The tls configuration for additional hostnames to be covered with this ingress record.
    # ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    # ## extraTls:
    # ## - hosts:
    # ##     - nginx.local
    # ##   secretName: nginx.local-tls
    # ##
    # extraTls: []
    # ## @param ingress.secrets If you're providing your own certificates, please use this to add the certificates as secrets
    # ## key and certificate should start with -----BEGIN CERTIFICATE----- or
    # ## -----BEGIN RSA PRIVATE KEY-----
    # ##
    # ## name should line up with a tlsSecret set further up
    # ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
    # ##
    # ## It is also possible to create and manage the certificates outside of this helm chart
    # ## Please see README.md for more information
    # ## e.g:
    # ## - name: nginx.local-tls
    # ##   key:
    # ##   certificate:
    # ##
    # secrets: []
    # ## @param ingress.extraRules The list of additional rules to be added to this ingress record. Evaluated as a template
    # ## Useful when looking for additional customization, such as using different backend
    # ##
    # extraRules: []


  #         ports:
  #           - name: http
  #             port: 8080
  #             protocol: TCP
  #             service:
  #               type: ClusterIP
  #               annotations:
  #                 cloud.google.com/neg: '{"ingress": true}'
  #             ingress:
  #               annotations:
  #                 kubernetes.io/ingress.class: "gce"
  #                 kubernetes.io/ingress.global-static-ip-name: "docs-vip" #* `docs-vip` is created with TF
  #                 networking.gke.io/managed-certificates: docs-ssl-cert
  #               hosts:
  #                 - host: "docs-network.portal.pokt.network"
  #                   paths:
  #                     - path: /
  #                       pathType: Prefix
  #               # tls:
  #               #   - secretName: pub-tls
  #               #     hosts:
  #               #       - "docs.pokt.network"

  #         livenessProbe:
  #           tcpSocket:
  #             port: 8080
  # global:
  #   imagePullPolicy: Always    #* To always get the newest available "latest"
  #   serviceAccount:
  #     name: nginx
  #   securityContext:
  #     fsGroup: 1001
  #     runAsUser: 1001
  #     runAsGroup: 1001

